-- Problem Statement: Compute the moving average of how much the customer paid in a seven days window (i.e., current day + 6 days before). average_amount should be rounded to two decimal places. Return the result table ordered by visited_on in ascending order.

-- Given Table: Customer
-- 
-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | customer_id   | int     |
-- | name          | varchar |
-- | visited_on    | date    |
-- | amount        | int     |
-- +---------------+---------+
-- In SQL, (customer_id, visited_on) is the primary key for this table.
-- This table contains data about customer transactions in a restaurant.
-- visited_on is the date on which the customer with ID (customer_id) has visited the restaurant.
-- amount is the total paid by a customer.
-- 
-- Approach: To compute the moving average of how much the customer paid in a seven days window, we can first calculate the total amount paid by each customer on each visited date. Then, we create a table with the moving average for each date within the seven days window. We round the average_amount to two decimal places. Finally, we order the result table by visited_on in ascending order.
-- 
-- SQL Solution:
WITH table1 AS (
    SELECT visited_on, SUM(amount) AS amount
    FROM Customer
    GROUP BY visited_on
)
SELECT a.visited_on + 6 AS visited_on, SUM(b.amount) AS amount, ROUND((SUM(b.amount) / 7.0), 2) AS average_amount
FROM table1 a 
JOIN table1 b ON (b.visited_on - a.visited_on)::int BETWEEN 0 AND 6
GROUP BY a.visited_on
HAVING COUNT(DISTINCT b.visited_on) = 7
ORDER BY a.visited_on;
